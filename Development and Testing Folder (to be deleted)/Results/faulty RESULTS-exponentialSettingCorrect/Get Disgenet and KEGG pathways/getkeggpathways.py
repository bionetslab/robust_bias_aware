# -*- coding: utf-8 -*-
"""GetKEGGPathways.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1r6kUkN-223fSL24Fbipbg9us3Q3TFJE8
"""

import Bio.KEGG.REST
import pandas as pd
import numpy as np
import mygene as mg

mg = mg.MyGeneInfo()

pathways = ['hsa04060', 'hsa04140', 'hsa04621', 'hsa04630', 'hsa05014', 'hsa05016', 'hsa05223', 'hsa05321']

for pathway in pathways:
    handle = Bio.KEGG.REST.kegg_get(pathway)
    with open(f'{pathway}.txt', 'w') as fp:
        fp.write(handle.read())

for pathway in pathways:
    ids = []
    symbols = []
    with open(f'{pathway}.txt', 'r') as fp:
        gene_line = False
        for line in fp:
            line = line.strip()
            if line.startswith('GENE'):
                gene_line = True
                line = line[4:].strip()
            if line.startswith('COMPOUND') or line.startswith('REFERENCE'):
                gene_line = False
            if gene_line:
                try:
                    gene = line.split(';')[0].split('  ')
                    ids.append(gene[0])
                    symbols.append(gene[1])
                except IndexError:
                    print(gene)
    gene_set = pd.DataFrame({'ID': ids, 'Symbol': symbols})
    gene_set.to_csv(f'{pathway}.csv')


bait_usage = pd.read_csv('geneSymbol_baitUsage.txt', sep=' ')

all_genes = list(set(bait_usage.gene))
gene_occurences = {gene: 0 for gene in all_genes}
gene_bait_usage = {gene: 0 for gene in all_genes}
for i in range(bait_usage.shape[0]):
    gene = bait_usage.loc[i, 'gene']
    gene_bait_usage[gene] += bait_usage.loc[i, 'bait_usage']
    gene_occurences[gene] += 1
gene_bait_usages = [gene_bait_usage[gene] for gene in all_genes]
gene_bait_usage = pd.DataFrame({'gene': all_genes, 'bait_usage': gene_bait_usages})
gene_bait_usage.set_index('gene',inplace=True)

duplicates = [gene for gene in all_genes if gene_occurences[gene] > 1]

len(duplicates) / len(all_genes)

# gene_bait_usage.to_csv('gene_bait_usage.csv')

pair_freqs = pd.read_csv('geneSymbol_studyAttention.txt', sep=' ')

all_genes = list(set(pair_freqs.gene))
gene_occurences = {gene: 0 for gene in all_genes}
gene_study_attention = {gene: 0 for gene in all_genes}
for i in range(pair_freqs.shape[0]):
    gene = pair_freqs.loc[i, 'gene']
    gene_study_attention[gene] += pair_freqs.loc[i, 'study_attention']
    gene_occurences[gene] += 1
gene_study_attentions = [gene_study_attention[gene] for gene in all_genes]
gene_study_attention = pd.DataFrame({'gene': all_genes, 'study_attention': gene_study_attentions})
gene_study_attention.set_index('gene',inplace=True)

# study_att.to_csv('study_attention.csv')

pthw = pd.read_csv('hsa04060.csv').Symbol

# bait_usage.loc['IL6ST', :]

mean_bait_usages = []
mean_study_attentions = []
for pathway in pathways:
    pathway_genes = list(pd.read_csv(f'{pathway}.csv').Symbol)
    bait_usages = []
    study_attentions = []
    for gene in pathway_genes:
        if gene in gene_bait_usage.index:
            bait_usages.append(gene_bait_usage.loc[gene, 'bait_usage'])
        if gene in gene_study_attention.index:
            study_attentions.append(gene_study_attention.loc[gene, 'study_attention'])
    mean_bait_usages.append(np.mean(bait_usages))
    mean_study_attentions.append(np.mean(study_attentions))

kegg_statistics = pd.DataFrame({'gene_set': pathways, 'data_source': ['KEGG' for _ in pathways], 'mean_bait_usage': mean_bait_usages, 'mean_study_attention': mean_study_attentions})

kegg_statistics.to_csv('kegg_statistics.csv')

disgenet = pd.read_csv("disgenet.csv")
dis_ids = {"ALS":"C0002736", "LC": "C1737250", "UC": "C0009324","HD":"C0020179","CD":"C0021390"}
disgenet = disgenet[disgenet["disease_id"].isin(list(dis_ids.values()))]

disease_ids = list(set(disgenet.disease_id))
for disaese_id in disease_ids:
    disease_genes = list(disgenet[disgenet.disease_id == disaese_id].gene)
    gene_info = mg.querymany(disease_genes)
    gene_symbols = [info['symbol'] for info in gene_info if len(info) > 2]
    bait_usages = []
    study_attentions = []
    for gene in gene_symbols:
        if gene in gene_bait_usage.index:
            bait_usages.append(gene_bait_usage.loc[gene, 'bait_usage'])
        if gene in gene_study_attention.index:
            study_attentions.append(gene_study_attention.loc[gene, 'study_attention'])
    mean_bait_usages.append(np.mean(bait_usages))
    mean_study_attentions.append(np.mean(study_attentions))

disease_ids = list(set(disgenet.disease_id))
for disease_id in disease_ids:
    disease_genes = list(disgenet[disgenet.disease_id == disaese_id].gene)
    gene_info = mg.querymany(disease_genes)
    gene_symbols = [info['symbol'] if len(info) > 2 else None for info in gene_info]
    pd.DataFrame({'ID': disease_genes, 'Symbol':gene_symbols}).to_csv(f'{disease_id}.csv')

all_statistics = pd.DataFrame({'gene_set': pathways + disease_ids, 'data_source': ['KEGG' for _ in pathways] + ['DisGeNET' for _ in disease_ids], 'mean_bait_usage': mean_bait_usages, 'mean_study_attention': mean_study_attentions})

all_statistics

all_statistics.to_csv('kegg_disgenet_statistics.csv')